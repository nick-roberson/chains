{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\n/**\n * FastAPI\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 0.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from '../runtime';\n/**\n * \n */\nexport class DefaultApi extends runtime.BaseAPI {\n  /**\n   * Health endpoint.\n   * Health\n   */\n  async healthHealthGetRaw(initOverrides) {\n    const queryParameters = {};\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/health`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response);\n  }\n\n  /**\n   * Health endpoint.\n   * Health\n   */\n  async healthHealthGet(initOverrides) {\n    const response = await this.healthHealthGetRaw(initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Query the index.\n   * Query\n   */\n  async queryQueryGetRaw(requestParameters, initOverrides) {\n    if (requestParameters.prompt === null || requestParameters.prompt === undefined) {\n      throw new runtime.RequiredError('prompt', 'Required parameter requestParameters.prompt was null or undefined when calling queryQueryGet.');\n    }\n    const queryParameters = {};\n    if (requestParameters.prompt !== undefined) {\n      queryParameters['prompt'] = requestParameters.prompt;\n    }\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/query`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response);\n  }\n\n  /**\n   * Query the index.\n   * Query\n   */\n  async queryQueryGet(requestParameters, initOverrides) {\n    const response = await this.queryQueryGetRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Root endpoint.\n   * Read Root\n   */\n  async readRootGetRaw(initOverrides) {\n    const queryParameters = {};\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response);\n  }\n\n  /**\n   * Root endpoint.\n   * Read Root\n   */\n  async readRootGet(initOverrides) {\n    const response = await this.readRootGetRaw(initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Reload the index.\n   * Reload\n   */\n  async reloadReloadGetRaw(requestParameters, initOverrides) {\n    const queryParameters = {};\n    if (requestParameters.testPrompt !== undefined) {\n      queryParameters['test_prompt'] = requestParameters.testPrompt;\n    }\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/reload`,\n      method: 'GET',\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response);\n  }\n\n  /**\n   * Reload the index.\n   * Reload\n   */\n  async reloadReloadGet(requestParameters = {}, initOverrides) {\n    const response = await this.reloadReloadGetRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n}","map":{"version":3,"names":["runtime","DefaultApi","BaseAPI","healthHealthGetRaw","initOverrides","queryParameters","headerParameters","response","request","path","method","headers","query","JSONApiResponse","healthHealthGet","value","queryQueryGetRaw","requestParameters","prompt","undefined","RequiredError","queryQueryGet","readRootGetRaw","readRootGet","reloadReloadGetRaw","testPrompt","reloadReloadGet"],"sources":["/Users/nicholas/Code/chains/my-app/src/api/apis/DefaultApi.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * FastAPI\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 0.1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport type {\n  HTTPValidationError,\n} from '../models/index';\nimport {\n    HTTPValidationErrorFromJSON,\n    HTTPValidationErrorToJSON,\n} from '../models/index';\n\nexport interface QueryQueryGetRequest {\n    prompt: string;\n}\n\nexport interface ReloadReloadGetRequest {\n    testPrompt?: string;\n}\n\n/**\n * \n */\nexport class DefaultApi extends runtime.BaseAPI {\n\n    /**\n     * Health endpoint.\n     * Health\n     */\n    async healthHealthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/health`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Health endpoint.\n     * Health\n     */\n    async healthHealthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {\n        const response = await this.healthHealthGetRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Query the index.\n     * Query\n     */\n    async queryQueryGetRaw(requestParameters: QueryQueryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {\n        if (requestParameters.prompt === null || requestParameters.prompt === undefined) {\n            throw new runtime.RequiredError('prompt','Required parameter requestParameters.prompt was null or undefined when calling queryQueryGet.');\n        }\n\n        const queryParameters: any = {};\n\n        if (requestParameters.prompt !== undefined) {\n            queryParameters['prompt'] = requestParameters.prompt;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/query`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Query the index.\n     * Query\n     */\n    async queryQueryGet(requestParameters: QueryQueryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {\n        const response = await this.queryQueryGetRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Root endpoint.\n     * Read Root\n     */\n    async readRootGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {\n        const queryParameters: any = {};\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Root endpoint.\n     * Read Root\n     */\n    async readRootGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {\n        const response = await this.readRootGetRaw(initOverrides);\n        return await response.value();\n    }\n\n    /**\n     * Reload the index.\n     * Reload\n     */\n    async reloadReloadGetRaw(requestParameters: ReloadReloadGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {\n        const queryParameters: any = {};\n\n        if (requestParameters.testPrompt !== undefined) {\n            queryParameters['test_prompt'] = requestParameters.testPrompt;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        const response = await this.request({\n            path: `/reload`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        }, initOverrides);\n\n        return new runtime.JSONApiResponse<any>(response);\n    }\n\n    /**\n     * Reload the index.\n     * Reload\n     */\n    async reloadReloadGet(requestParameters: ReloadReloadGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {\n        const response = await this.reloadReloadGetRaw(requestParameters, initOverrides);\n        return await response.value();\n    }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}