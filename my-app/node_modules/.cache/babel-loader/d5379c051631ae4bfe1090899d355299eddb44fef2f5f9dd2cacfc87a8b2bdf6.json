{"ast":null,"code":"var _jsxFileName = \"/Users/nicholas/Code/chain_texts/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\n\n// Import from MUI\nimport Button from '@mui/material/Button';\nimport Input from '@mui/joy/Input';\nimport Grid from '@mui/system/Unstable_Grid';\nimport { TextareaAutosize } from '@mui/base/TextareaAutosize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // define a state to hold the response from the API\n  const [response, setResponse] = React.useState('');\n  const [query, setQuery] = React.useState('Nothing Yet');\n\n  // define a function to get the text from the query and submit it to the APi\n  function getTextFromApi() {\n    fetch(`http://127.0.0.1:8000/run?query=${query}`).then(response => response.json()).then(data => {\n      // log the information to the console\n      console.log(data);\n      // get out the `response` field from the dict and set it to the state\n      setResponse(data.response);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sx: {\n          m: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => getTextFromApi(),\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            m: 4\n          },\n          children: \"Generate Response\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(TextareaAutosize, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), response]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E2ffb2oFr4Wt+hY7fGPia6F/sG0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Button","Input","Grid","TextareaAutosize","jsxDEV","_jsxDEV","App","_s","response","setResponse","useState","query","setQuery","getTextFromApi","fetch","then","json","data","console","log","className","children","container","spacing","xs","sx","m","type","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","color","_c","$RefreshReg$"],"sources":["/Users/nicholas/Code/chain_texts/my-app/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './App.css';\n\n// Import from MUI\nimport Button from '@mui/material/Button';\nimport Input from '@mui/joy/Input';\nimport Grid from '@mui/system/Unstable_Grid';\nimport Box from '@mui/material/Box';\nimport { TextareaAutosize } from '@mui/base/TextareaAutosize';\n\n\nfunction App() {\n\n  // define a state to hold the response from the API\n  const [response, setResponse] = React.useState('')\n  const [query, setQuery] = React.useState('Nothing Yet')\n\n  // define a function to get the text from the query and submit it to the APi\n  function getTextFromApi() {\n    fetch(`http://127.0.0.1:8000/run?query=${query}`)\n      .then(response => response.json())\n      .then(data => {\n        // log the information to the console\n        console.log(data)\n        // get out the `response` field from the dict and set it to the state\n        setResponse(data.response)\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2}>\n        <Grid xs={12} sx={{ m: 4 }}>\n          <Input type=\"text\" onChange={(e) => setQuery(e.target.value)} />\n        </Grid>\n        <Grid xs={12}>\n          <Button \n            onClick={() => getTextFromApi()}\n            variant=\"contained\"\n            color=\"primary\"\n            sx={{ m: 4 }}\n          >\n              Generate Response\n          </Button>\n        </Grid>\n        <Grid xs={12}>\n          <TextareaAutosize />\n              {response}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;;AAElB;AACA,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,2BAA2B;AAE5C,SAASC,gBAAgB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,KAAK,CAACW,QAAQ,CAAC,aAAa,CAAC;;EAEvD;EACA,SAASG,cAAcA,CAAA,EAAG;IACxBC,KAAK,CAAE,mCAAkCH,KAAM,EAAC,CAAC,CAC9CI,IAAI,CAACP,QAAQ,IAAIA,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CACjCD,IAAI,CAACE,IAAI,IAAI;MACZ;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB;MACAR,WAAW,CAACQ,IAAI,CAACT,QAAQ,CAAC;IAC5B,CAAC,CAAC;EACN;EAEA,oBACEH,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBhB,OAAA,CAACH,IAAI;MAACoB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAF,QAAA,gBACzBhB,OAAA,CAACH,IAAI;QAACsB,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE;UAAEC,CAAC,EAAE;QAAE,CAAE;QAAAL,QAAA,eACzBhB,OAAA,CAACJ,KAAK;UAAC0B,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAGC,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACP9B,OAAA,CAACH,IAAI;QAACsB,EAAE,EAAE,EAAG;QAAAH,QAAA,eACXhB,OAAA,CAACL,MAAM;UACLoC,OAAO,EAAEA,CAAA,KAAMvB,cAAc,CAAC,CAAE;UAChCwB,OAAO,EAAC,WAAW;UACnBC,KAAK,EAAC,SAAS;UACfb,EAAE,EAAE;YAAEC,CAAC,EAAE;UAAE,CAAE;UAAAL,QAAA,EACd;QAED;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACP9B,OAAA,CAACH,IAAI;QAACsB,EAAE,EAAE,EAAG;QAAAH,QAAA,gBACXhB,OAAA,CAACF,gBAAgB;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACf3B,QAAQ;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC5B,EAAA,CAzCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}