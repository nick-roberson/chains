{"ast":null,"code":"var _jsxFileName = \"/Users/nicholas/Code/chains/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./App.css\";\n\n// Import from MUI\nimport Input from \"@mui/joy/Input\";\nimport Grid from \"@mui/system/Unstable_Grid\";\nimport Box from \"@mui/material/Box\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\n// Import the API Client\nimport { Configuration, DefaultApi } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAPIClient = () => {\n  const configuration = new Configuration({\n    basePath: \"http://localhost:8000\"\n  });\n  const api = new DefaultApi(configuration);\n  return api;\n};\n\n// Get API Client \nconst getApiClient = () => {\n  return new DefaultApi();\n};\nfunction App() {\n  _s();\n  // define a state to hold the response from the API\n  const [response, setResponse] = React.useState(\"\");\n  const [query, setQuery] = React.useState(\"Nothing Yet\");\n  const [loading, setLoading] = React.useState(false);\n\n  // define a function to get the text from the query and submit it to the APi\n  function getTextFromApi() {\n    // set the loading state to true\n    setLoading(true);\n    fetch(`http://127.0.0.1:8000/query?prompt=${query}`).then(response => response.json()).then(data => {\n      // log the information to the console\n      console.log(data);\n      // get out the `response` field from the dict and set it to the state\n      setResponse(data.response);\n      // set the loading state to false\n      setLoading(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sx: {\n          m: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Chain Texts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter a prompt and generate a response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Example: \\\"Generate a chain text for me to send around to friends about St Patricks Day\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        sx: {\n          m: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n            onClick: () => getTextFromApi(),\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              m: 4\n            },\n            loading: loading,\n            children: \"Generate Response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            m: 4\n          },\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xJIjk0b34XXRiyHKcYjIA9qRSOc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Input","Grid","Box","LoadingButton","Configuration","DefaultApi","jsxDEV","_jsxDEV","getAPIClient","configuration","basePath","api","getApiClient","App","_s","response","setResponse","useState","query","setQuery","loading","setLoading","getTextFromApi","fetch","then","json","data","console","log","className","children","container","spacing","xs","sx","m","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","variant","color","_c","$RefreshReg$"],"sources":["/Users/nicholas/Code/chains/my-app/src/App.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\n// Import from MUI\nimport Input from \"@mui/joy/Input\";\nimport Grid from \"@mui/system/Unstable_Grid\";\nimport Box from \"@mui/material/Box\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\n// Import the API Client\nimport { Configuration, DefaultApi } from \"./api\";\n\nconst getAPIClient = () => {\n    const configuration = new Configuration({\n        basePath: \"http://localhost:8000\",\n    });\n    const api = new DefaultApi(configuration);\n    return api;\n}\n\n// Get API Client \nconst getApiClient = () => {\n\n  return new DefaultApi();\n}\nfunction App() {\n  // define a state to hold the response from the API\n  const [response, setResponse] = React.useState(\"\");\n  const [query, setQuery] = React.useState(\"Nothing Yet\");\n  const [loading, setLoading] = React.useState(false);\n\n  // define a function to get the text from the query and submit it to the APi\n  function getTextFromApi() {\n    // set the loading state to true\n    setLoading(true);\n\n    fetch(`http://127.0.0.1:8000/query?prompt=${query}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // log the information to the console\n        console.log(data);\n        // get out the `response` field from the dict and set it to the state\n        setResponse(data.response);\n        // set the loading state to false\n        setLoading(false);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <Grid container spacing={2}>\n        <Grid xs={12} sx={{ m: 4 }}>\n          <Box>\n            <h1>Chain Texts</h1>\n            <p>Enter a prompt and generate a response</p>\n            <p>\n              Example: \"Generate a chain text for me to send around to friends\n              about St Patricks Day\"\n            </p>\n          </Box>\n        </Grid>\n\n        <Grid xs={12} sx={{ m: 5 }}>\n          <Grid xs={8}>\n            <Input type=\"text\" onChange={(e) => setQuery(e.target.value)} />\n          </Grid>\n          <Grid xs={4}>\n            <LoadingButton\n              onClick={() => getTextFromApi()}\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ m: 4 }}\n              loading={loading}\n            >\n              Generate Response\n            </LoadingButton>\n          </Grid>\n        </Grid>\n\n        <Grid xs={12}>\n          <Box sx={{ m: 4 }}>{response}</Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}