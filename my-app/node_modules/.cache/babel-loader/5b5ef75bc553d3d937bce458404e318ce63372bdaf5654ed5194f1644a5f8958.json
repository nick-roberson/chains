{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\n/**\n * FastAPI\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 0.1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from \"../runtime\";\nimport { QueryResponseFromJSON, UpdateResponseFromJSON } from \"../models/index\";\n/**\n *\n */\nexport class DefaultApi extends runtime.BaseAPI {\n  /**\n   * Health endpoint.\n   * Health\n   */\n  async healthHealthGetRaw(initOverrides) {\n    const queryParameters = {};\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/health`,\n      method: \"GET\",\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response);\n  }\n\n  /**\n   * Health endpoint.\n   * Health\n   */\n  async healthHealthGet(initOverrides) {\n    const response = await this.healthHealthGetRaw(initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Query the index.\n   * Query\n   */\n  async queryQueryPostRaw(requestParameters, initOverrides) {\n    if (requestParameters.prompt === null || requestParameters.prompt === undefined) {\n      throw new runtime.RequiredError(\"prompt\", \"Required parameter requestParameters.prompt was null or undefined when calling queryQueryPost.\");\n    }\n    const queryParameters = {};\n    if (requestParameters.prompt !== undefined) {\n      queryParameters[\"prompt\"] = requestParameters.prompt;\n    }\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/query`,\n      method: \"POST\",\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => QueryResponseFromJSON(jsonValue));\n  }\n\n  /**\n   * Query the index.\n   * Query\n   */\n  async queryQueryPost(requestParameters, initOverrides) {\n    const response = await this.queryQueryPostRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Root endpoint.\n   * Read Root\n   */\n  async readRootGetRaw(initOverrides) {\n    const queryParameters = {};\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/`,\n      method: \"GET\",\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response);\n  }\n\n  /**\n   * Root endpoint.\n   * Read Root\n   */\n  async readRootGet(initOverrides) {\n    const response = await this.readRootGetRaw(initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Reload the index.\n   * Reload\n   */\n  async reloadReloadPostRaw(requestParameters, initOverrides) {\n    const queryParameters = {};\n    if (requestParameters.testPrompt !== undefined) {\n      queryParameters[\"test_prompt\"] = requestParameters.testPrompt;\n    }\n    const headerParameters = {};\n    const response = await this.request({\n      path: `/reload`,\n      method: \"POST\",\n      headers: headerParameters,\n      query: queryParameters\n    }, initOverrides);\n    return new runtime.JSONApiResponse(response, jsonValue => UpdateResponseFromJSON(jsonValue));\n  }\n\n  /**\n   * Reload the index.\n   * Reload\n   */\n  async reloadReloadPost(requestParameters = {}, initOverrides) {\n    const response = await this.reloadReloadPostRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n}","map":{"version":3,"names":["runtime","QueryResponseFromJSON","UpdateResponseFromJSON","DefaultApi","BaseAPI","healthHealthGetRaw","initOverrides","queryParameters","headerParameters","response","request","path","method","headers","query","JSONApiResponse","healthHealthGet","value","queryQueryPostRaw","requestParameters","prompt","undefined","RequiredError","jsonValue","queryQueryPost","readRootGetRaw","readRootGet","reloadReloadPostRaw","testPrompt","reloadReloadPost"],"sources":["/Users/nicholas/Code/chains/my-app/src/api/apis/DefaultApi.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * FastAPI\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 0.1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from \"../runtime\";\nimport type {\n  HTTPValidationError,\n  QueryResponse,\n  UpdateResponse,\n} from \"../models/index\";\nimport {\n  HTTPValidationErrorFromJSON,\n  HTTPValidationErrorToJSON,\n  QueryResponseFromJSON,\n  QueryResponseToJSON,\n  UpdateResponseFromJSON,\n  UpdateResponseToJSON,\n} from \"../models/index\";\n\nexport interface QueryQueryPostRequest {\n  prompt: string;\n}\n\nexport interface ReloadReloadPostRequest {\n  testPrompt?: string;\n}\n\n/**\n *\n */\nexport class DefaultApi extends runtime.BaseAPI {\n  /**\n   * Health endpoint.\n   * Health\n   */\n  async healthHealthGetRaw(\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<object>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    const response = await this.request(\n      {\n        path: `/health`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse<any>(response);\n  }\n\n  /**\n   * Health endpoint.\n   * Health\n   */\n  async healthHealthGet(\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<object> {\n    const response = await this.healthHealthGetRaw(initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Query the index.\n   * Query\n   */\n  async queryQueryPostRaw(\n    requestParameters: QueryQueryPostRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<QueryResponse>> {\n    if (\n      requestParameters.prompt === null ||\n      requestParameters.prompt === undefined\n    ) {\n      throw new runtime.RequiredError(\n        \"prompt\",\n        \"Required parameter requestParameters.prompt was null or undefined when calling queryQueryPost.\",\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters.prompt !== undefined) {\n      queryParameters[\"prompt\"] = requestParameters.prompt;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    const response = await this.request(\n      {\n        path: `/query`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      QueryResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * Query the index.\n   * Query\n   */\n  async queryQueryPost(\n    requestParameters: QueryQueryPostRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<QueryResponse> {\n    const response = await this.queryQueryPostRaw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n\n  /**\n   * Root endpoint.\n   * Read Root\n   */\n  async readRootGetRaw(\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<object>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    const response = await this.request(\n      {\n        path: `/`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse<any>(response);\n  }\n\n  /**\n   * Root endpoint.\n   * Read Root\n   */\n  async readRootGet(\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<object> {\n    const response = await this.readRootGetRaw(initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Reload the index.\n   * Reload\n   */\n  async reloadReloadPostRaw(\n    requestParameters: ReloadReloadPostRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<UpdateResponse>> {\n    const queryParameters: any = {};\n\n    if (requestParameters.testPrompt !== undefined) {\n      queryParameters[\"test_prompt\"] = requestParameters.testPrompt;\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    const response = await this.request(\n      {\n        path: `/reload`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      UpdateResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * Reload the index.\n   * Reload\n   */\n  async reloadReloadPost(\n    requestParameters: ReloadReloadPostRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<UpdateResponse> {\n    const response = await this.reloadReloadPostRaw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}